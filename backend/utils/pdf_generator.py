import io
from reportlab.pdfgen import canvas
from reportlab.lib.pagesizes import A4
from reportlab.lib.units import mm
from reportlab.lib import colors
from datetime import datetime

def make_pass_pdf(
    user_name: str,
    user_type: str,
    user_id: str,
    pass_type: str,
    issue_date: datetime,
    expiry_date: datetime,
    zones: list,
    qr_png_bytes: bytes,
) -> bytes:
    """
    Simple, fast PDF generator for a bus pass.
    """
    buf = io.BytesIO()
    c = canvas.Canvas(buf, pagesize=A4)

    width, height = A4
    margin = 20 * mm
    top = height - margin

    # Header
    c.setFillColor(colors.HexColor("#0b62a4"))
    c.rect(0, top - 30, width, 30, fill=1, stroke=0)
    c.setFillColor(colors.white)
    c.setFont("Helvetica-Bold", 16)
    c.drawString(margin, top - 22, "Smart Bus Pass")

    # Body
    c.setFillColor(colors.black)
    c.setFont("Helvetica-Bold", 12)
    c.drawString(margin, top - 60, f"Name: {user_name}")
    c.setFont("Helvetica", 11)
    c.drawString(margin, top - 80, f"User Type: {user_type}")
    c.drawString(margin, top - 100, f"User ID: {user_id}")
    c.drawString(margin, top - 120, f"Pass Type: {pass_type}")
    c.drawString(margin, top - 140, f"Issue Date: {issue_date.strftime('%Y-%m-%d')}")
    c.drawString(margin, top - 160, f"Expiry Date: {expiry_date.strftime('%Y-%m-%d')}")
    c.drawString(margin, top - 180, f"Zones: {', '.join(zones) if zones else 'N/A'}")

    # QR
    if qr_png_bytes:
        from reportlab.lib.utils import ImageReader

        qr = ImageReader(io.BytesIO(qr_png_bytes))
        qr_size = 40 * mm
        c.drawImage(qr, width - margin - qr_size, top - 180, qr_size, qr_size, preserveAspectRatio=True, mask="auto")

    # Footer
    c.setFont("Helvetica-Oblique", 9)
    c.setFillColor(colors.gray)
    c.drawString(margin, 15 * mm, "Generated by Smart Bus Pass Automation System")

    c.showPage()
    c.save()
    return buf.getvalue()
